/* ==========================================================================
   Noxss Utility Class Generator
   - Gera o arquivo utilities.css a partir de uma configura√ß√£o central.
   - Execute com: node build/generate-utilities.js
   ========================================================================== */

const fs = require('fs');
const path = require('path');

console.log('üöÄ Iniciando a gera√ß√£o de classes utilit√°rias da Noxss...');

// --- CONFIGURA√á√ÉO CENTRAL ---
const config = {
    prefix: 'u',
    separator: '-', // Usando h√≠fen para melhor legibilidade e padr√£o comum
    responsiveSeparator: '\\:',
    outputPath: path.join(__dirname, 'css', 'components', 'utilities.css'),

    breakpoints: {
        'md': '768px',
        'lg': '992px',
        'xl': '1200px',
    },

    spacing: {
        '0': '0',
        '1': '0.25rem',
        '2': '0.5rem',
        '3': '1rem',
        '4': '1.5rem',
        '5': '3rem',
        'auto': 'auto',
    },

    utilities: [
        // Display
        { class: 'd', property: 'display', responsive: true, values: { 'none': 'none', 'block': 'block', 'inline-block': 'inline-block', 'flex': 'flex', 'inline-flex': 'inline-flex', 'grid': 'grid' }},
        
        // Flexbox
        { class: 'flex', property: 'flex-direction', responsive: true, values: { 'row': 'row', 'col': 'column' }},
        { class: 'justify', property: 'justify-content', responsive: true, values: { 'start': 'flex-start', 'center': 'center', 'end': 'flex-end', 'between': 'space-between' }},
        // CORRE√á√ÉO APLICADA AQUI:
        { class: 'align', property: 'align-items', responsive: true, values: { 'start': 'flex-start', 'center': 'center', 'end': 'flex-end', 'stretch': 'stretch' }},
        { class: 'flex-wrap', property: 'flex-wrap', responsive: true, values: { 'wrap': 'wrap', 'nowrap': 'nowrap' }},

        // Espa√ßamento
        { class: 'm',  property: 'margin', responsive: true, useSpacing: true },
        { class: 'mt', property: 'margin-top', responsive: true, useSpacing: true },
        { class: 'mb', property: 'margin-bottom', responsive: true, useSpacing: true },
        { class: 'ms', property: 'margin-left', responsive: true, useSpacing: true },
        { class: 'me', property: 'margin-right', responsive: true, useSpacing: true },
        { class: 'mx', properties: ['margin-left', 'margin-right'], responsive: true, useSpacing: true },
        { class: 'my', properties: ['margin-top', 'margin-bottom'], responsive: true, useSpacing: true },

        { class: 'p',  property: 'padding', responsive: true, useSpacing: true },
        { class: 'pt', property: 'padding-top', responsive: true, useSpacing: true },
        { class: 'pb', property: 'padding-bottom', responsive: true, useSpacing: true },
        { class: 'ps', property: 'padding-left', responsive: true, useSpacing: true },
        { class: 'pe', property: 'padding-right', responsive: true, useSpacing: true },
        { class: 'px', properties: ['padding-left', 'padding-right'], responsive: true, useSpacing: true },
        { class: 'py', properties: ['padding-top', 'padding-bottom'], responsive: true, useSpacing: true },

        { class: 'gap', property: 'gap', responsive: true, useSpacing: true },

        // Tipografia
        { class: 'text', property: 'text-align', responsive: true, values: { 'left': 'left', 'center': 'center', 'right': 'right' }},
        { class: 'font', property: 'font-weight', values: { 'normal': 'normal', 'medium': '500', 'semibold': '600', 'bold': '700' }},
        { class: 'text', property: 'color', values: {
            'primary': 'var(--noxss-text-primary)',
            'secondary': 'var(--noxss-text-secondary)',
            'accent': 'var(--noxss-accent-primary)',
            'success': 'var(--noxss-color-success)',
            'danger': 'var(--noxss-color-danger)',
            'warning': 'var(--noxss-color-warning)',
        }},

        // Bordas e Sombras
        { class: 'rounded', property: 'border-radius', values: { '': 'var(--noxss-border-radius-base)', 'full': '9999px' }},
        { class: 'shadow', property: 'box-shadow', values: { 'sm': 'var(--noxss-shadow-sm)', 'md': 'var(--noxss-shadow-md)', 'lg': 'var(--noxss-shadow-lg)', 'none': 'none' }},
    ]
};

// --- FUN√á√ÉO GERADORA ---
function generateUtilities() {
    let css = `/* ==========================================================================
   Noxss Library: Utility Classes (AUTO-GENERATED)
   - Do not edit this file directly. It is generated by 'build/generate-utilities.js'.
   - Vers√£o: 1.0
   ========================================================================== */\n\n`;

    // Gera classes base
    config.utilities.forEach(util => {
        const values = util.useSpacing ? config.spacing : util.values;
        for (const key in values) {
            const className = `${config.prefix}${config.separator}${util.class}${key ? `${config.separator}${key}` : ''}`;
            let properties = '';
            if (util.property) {
                properties = `${util.property}: ${values[key]} !important;`;
            } else if (util.properties) {
                properties = util.properties.map(p => `${p}: ${values[key]} !important;`).join(' ');
            }
            css += `.${className} { ${properties} }\n`;
        }
    });

    // Gera classes responsivas
    for (const bp in config.breakpoints) {
        css += `\n@media (min-width: ${config.breakpoints[bp]}) {\n`;
        config.utilities.forEach(util => {
            if (util.responsive) {
                const values = util.useSpacing ? config.spacing : util.values;
                for (const key in values) {
                    const className = `${bp}${config.responsiveSeparator}${config.prefix}${config.separator}${util.class}${key ? `${config.separator}${key}` : ''}`;
                    let properties = '';
                    if (util.property) {
                        properties = `${util.property}: ${values[key]} !important;`;
                    } else if (util.properties) {
                        properties = util.properties.map(p => `${p}: ${values[key]} !important;`).join(' ');
                    }
                    css += `    .${className} { ${properties} }\n`;
                }
            }
        });
        css += `}\n`;
    }

    return css;
}

// --- ESCRITA DO ARQUIVO ---
try {
    const cssContent = generateUtilities();
    fs.writeFileSync(config.outputPath, cssContent);
    console.log(`‚úÖ Sucesso! Arquivo de utilit√°rios gerado em: ${config.outputPath}`);
} catch (error) {
    console.error('‚ùå Erro ao gerar o arquivo de utilit√°rios:', error);
}